plugins {
	id "fabric-loom" version "0.5-SNAPSHOT"
	id "eclipse"
	id "maven-publish"
}

version = "${mod_version}"
group = "commoble.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets
{
	main
	examplemod
	test
}

minecraft {
}

repositories {
}

dependencies {
	minecraft "com.mojang:minecraft:${mc_version}"
	mappings "net.fabricmc:yarn:${mc_version}+build.${yarn_build}:v2"
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Commoble",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Commoble",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"Maven-Artifact":"${project.group}:${project.archivesBaseName}:${project.version}"
        ])
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	classifier = "sources"
	from sourceSets.main.allJava
}

artifacts {
	archives javadocJar
	archives sourcesJar
	// archives examplemodJar
}

// run "gradlew build publish" to build jars and generate a maven repo for them
// run "gradlew build" to build the jars without mavening them
publishing {
    publications {
        mavenJava(MavenPublication) {
			artifactId project.archivesBaseName
            artifact jar
			artifact sourcesJar
			artifact javadocJar
        }
    }
    repositories {
        maven {
			name="localMaven"
            url "file:///${project.projectDir}/maven"
        }
    }
}
